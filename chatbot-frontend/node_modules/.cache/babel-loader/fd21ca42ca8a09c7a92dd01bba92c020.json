{"ast":null,"code":"var _jsxFileName = \"D:\\\\javae\\\\ChatBot_Frontend\\\\chatbot-frontend\\\\src\\\\ActionProvider.js\";\nimport axios from 'axios';\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ActionProvider extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      messages: {}\n    };\n  }\n\n  async componentDidMount() {\n    await axios.get(`http://127.0.0.1:5000/chat?message=who is matt asay?`).then(res => {\n      console.log(\"****************\");\n      console.log(res.data);\n      const messages = res.data;\n      this.setState({\n        messages\n      });\n    });\n  }\n\n  greet() {\n    const greetingMessage = this.createChatBotMessage(\"Hi, friend.\");\n    this.updateChatbotState(greetingMessage);\n    console.log(greetingMessage);\n  }\n\n  fetchApiMessage() {\n    //const m = (this.state.messages);\n\n    /*#__PURE__*/\n    _jsxDEV(ActionProvider, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }, this);\n\n    console.log(this.state.messages); //<ActionProvider/>\n    // var m;\n    //  axios.get('http://127.0.0.1:5000/chat?message=who is matt asay?')\n    //   .then(function(response){ return  response })\n    //   .then(function(data) {\n    //       const items = data;\n    //       console.log(\"##############\");\n    //       console.log(typeof((items.data)) )\n    //       console.log(((items.data)) )\n    //       m=(items.data);\n    //       console.log(\"*************\");\n    //       console.log(m);\n    //       return m\n    //     })\n    //     const l= this.createChatBotMessage(m);\n    //     this.updateChatbotState(l);\n    //     console.log(\"&&&&&&&&&&&&&&&&&&&&&&&&&&&&\");\n    //     console.log(typeof(m));\n  } //  fetchApiMessage=(message)=>\n  //  {\n  //   const response = await axios.get('http://127.0.0.1:5000/chat?message=who is matt asay?');\n  //   console.log(typeof(response));\n  //   console.log((response));\n  //  };\n  // updateChatbotState(message) {\n  //   // NOTICE: This function is set in the constructor, and is passed in from the top level Chatbot component. The setState function here actually manipulates the top level state of the Chatbot, so it's important that we make sure that we preserve the previous state.\n  //   this.setState((prevState) => ({\n  //     ...prevState,\n  //     messages: [...prevState.messages, message],\n  //   }));\n  // }\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: this.state.mesage.map(person => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: \"message\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 15\n      }, this) //<li key={person.id}>{person.name}</li>\n      )\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default ActionProvider;","map":{"version":3,"sources":["D:/javae/ChatBot_Frontend/chatbot-frontend/src/ActionProvider.js"],"names":["axios","React","ActionProvider","Component","state","messages","componentDidMount","get","then","res","console","log","data","setState","greet","greetingMessage","createChatBotMessage","updateChatbotState","fetchApiMessage","render","mesage","map","person"],"mappings":";AAEA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AACA,MAAMC,cAAN,SAA6BD,KAAK,CAACE,SAAnC,CAA6C;AAAA;AAAA;AAAA,SAMzCC,KANyC,GAMjC;AACNC,MAAAA,QAAQ,EAAE;AADJ,KANiC;AAAA;;AAWnB,QAAjBC,iBAAiB,GAAG;AACxB,UAAMN,KAAK,CAACO,GAAN,CAAW,sDAAX,EACFC,IADE,CACGC,GAAG,IAAI;AACXC,MAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,IAAhB;AACA,YAAMP,QAAQ,GAAGI,GAAG,CAACG,IAArB;AACA,WAAKC,QAAL,CAAc;AAAER,QAAAA;AAAF,OAAd;AACD,KANE,CAAN;AAOA;;AAGDS,EAAAA,KAAK,GAAG;AACN,UAAMC,eAAe,GAAG,KAAKC,oBAAL,CAA0B,aAA1B,CAAxB;AACA,SAAKC,kBAAL,CAAwBF,eAAxB;AACAL,IAAAA,OAAO,CAACC,GAAR,CAAYI,eAAZ;AACD;;AAGDG,EAAAA,eAAe,GAChB;AACC;;AACA;AAAA,YAAC,cAAD;AAAA;AAAA;AAAA;AAAA;;AACAR,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKP,KAAL,CAAWC,QAAvB,EAHD,CAIC;AAEE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEF,GAvDyC,CA0D3C;AACA;AAEA;AAEA;AACA;AACA;AAIE;AACA;AAEA;AACA;AACA;AACA;AACA;;;AAEHc,EAAAA,MAAM,GAAG;AACN,wBACE;AAAA,gBAEI,KAAKf,KAAL,CAAWgB,MAAX,CACGC,GADH,CACOC,MAAM,iBACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,CAGI;AAHJ;AAFJ;AAAA;AAAA;AAAA;AAAA,YADF;AAWD;;AA1F0C;;AAkG3C,eAAepB,cAAf","sourcesContent":["\r\n\r\nimport axios from 'axios';\r\nimport React from 'react';\r\nclass ActionProvider extends React.Component {\r\n    // constructor(createChatBotMessage, setStateFunc) {\r\n      \r\n    //   this.createChatBotMessage = createChatBotMessage;\r\n    //   this.setState = setStateFunc;\r\n    // }\r\n    state = {\r\n      messages: {}\r\n    }\r\n\r\n\r\n   async componentDidMount() {\r\n     await axios.get(`http://127.0.0.1:5000/chat?message=who is matt asay?`)\r\n        .then(res => {\r\n          console.log(\"****************\") ;\r\n          console.log(res.data);\r\n          const messages = res.data;\r\n          this.setState({ messages});\r\n        })\r\n    }\r\n  \r\n\r\n    greet() {\r\n      const greetingMessage = this.createChatBotMessage(\"Hi, friend.\");\r\n      this.updateChatbotState(greetingMessage);\r\n      console.log(greetingMessage);\r\n    }\r\n\r\n   \r\n    fetchApiMessage()\r\n   {\r\n    //const m = (this.state.messages);\r\n    <ActionProvider/>\r\n    console.log(this.state.messages);\r\n    //<ActionProvider/>\r\n\r\n      // var m;\r\n      //  axios.get('http://127.0.0.1:5000/chat?message=who is matt asay?')\r\n      //   .then(function(response){ return  response })\r\n      //   .then(function(data) {\r\n      //       const items = data;\r\n      //       console.log(\"##############\");\r\n      //       console.log(typeof((items.data)) )\r\n      //       console.log(((items.data)) )\r\n      //       m=(items.data);\r\n      //       console.log(\"*************\");\r\n      //       console.log(m);\r\n      //       return m\r\n      //     })\r\n\r\n      //     const l= this.createChatBotMessage(m);\r\n      //     this.updateChatbotState(l);\r\n      //     console.log(\"&&&&&&&&&&&&&&&&&&&&&&&&&&&&\");\r\n      //     console.log(typeof(m));\r\n \r\n   }\r\n\r\n\r\n  //  fetchApiMessage=(message)=>\r\n  //  {\r\n\r\n  //   const response = await axios.get('http://127.0.0.1:5000/chat?message=who is matt asay?');\r\n\r\n  //   console.log(typeof(response));\r\n  //   console.log((response));\r\n  //  };\r\n   \r\n\r\n\r\n    // updateChatbotState(message) {\r\n    //   // NOTICE: This function is set in the constructor, and is passed in from the top level Chatbot component. The setState function here actually manipulates the top level state of the Chatbot, so it's important that we make sure that we preserve the previous state.\r\n  \r\n    //   this.setState((prevState) => ({\r\n    //     ...prevState,\r\n    //     messages: [...prevState.messages, message],\r\n    //   }));\r\n    // }\r\n\r\n render() {\r\n    return (\r\n      <ul>\r\n        {\r\n          this.state.mesage\r\n            .map(person =>\r\n              <li>message</li>\r\n              //<li key={person.id}>{person.name}</li>\r\n            )\r\n        }\r\n      </ul>\r\n    )\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n  }\r\n  \r\n  export default ActionProvider;"]},"metadata":{},"sourceType":"module"}