{"ast":null,"code":"var _jsxFileName = \"D:\\\\javae\\\\ChatBot_Frontend\\\\chatbot-frontend\\\\src\\\\ActionProvider.js\";\nimport React from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class ActionProvider1 extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      message: []\n    };\n  }\n\n  componentDidMount() {\n    axios.get(`http://127.0.0.1:5000/chat?message=who is matt asay?`).then(res => {\n      const persons = res.data;\n      this.setState({\n        persons\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: this.state.persons.map(person => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: person.name\n      }, person.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 15\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this);\n  }\n\n} //////////////////////////////////////////////////////////\n// import axios from 'axios';\n// class ActionProvider {\n//     constructor(createChatBotMessage, setStateFunc) {\n//       this.createChatBotMessage = createChatBotMessage;\n//       this.setState = setStateFunc;\n//     }\n//     // new method\n//     greet() {\n//       const greetingMessage = this.createChatBotMessage(\"Hi, friend.\");\n//       this.updateChatbotState(greetingMessage);\n//       console.log(greetingMessage);\n//     }\n//     ujjwalFunction()\n//     {\n//       const ujjwalmsg=this.createChatBotMessage(\"asdkjfhkjasdgfkjgDFJS\");\n//       this.updateChatbotState(ujjwalmsg);\n//     }\n//     handleJavascriptList = () => {\n//       const message = this.createChatBotMessage(\n//         \"Fantastic, I've got the following resources for you on Javascript:\",\n//         {\n//           widget: \"javascriptLinks\",\n//         }\n//       );\n//       console.log(typeof(message));\n//       console.log((message));\n//       this.updateChatbotState(message);\n//     }\n//     handleSpringbootList = () => {\n//       const message=this.createChatBotMessage(\n//         \"Fantastic, I've got the following resources for you on Springboot\",\n//         {\n//           widget:\"SpringbootLinks\",\n//         }\n//       );\n//       this.updateChatbotState(message);\n//     };\n//   //   componentDidMount(){\n//   //     this.fetchApiMessage().then((res) => {\n//   //         const l=this.createChatBotMessage(res.data);\n//   //         this.updateChatbotState(l);\n//   //         console.log(\"&&&&&&&&&&&&&&&&&&&&&&&&&&&&\");\n//   //         console.log(typeof(l));\n//   //         console.log(\"&&&&&&&&&&&&&&&&&&&&&&&&&&&&\");\n//   //     });\n//   // }\n//     fetchApiMessage=(message)=>\n//    {\n//       var m;\n//        axios.get('http://127.0.0.1:5000/chat?message=who is matt asay?')\n//         .then(function(response){ return  response })\n//         .then(function(data) {\n//             const items = data;\n//             console.log(\"##############\");\n//             console.log(typeof((items.data)) )\n//             console.log(((items.data)) )\n//             m=(items.data);\n//             console.log(\"*************\");\n//             console.log(m);\n//             return m\n//           })\n//           const l= this.createChatBotMessage(m);\n//           this.updateChatbotState(l);\n//           console.log(\"&&&&&&&&&&&&&&&&&&&&&&&&&&&&\");\n//           console.log(typeof(m));\n//    };\n//    fetchApiMessage=(message)=>\n//    {\n//     const response = await axios.get('http://127.0.0.1:5000/chat?message=who is matt asay?');\n//     console.log(typeof(response));\n//     console.log((response));\n//    };\n//     updateChatbotState(message) {\n//       // NOTICE: This function is set in the constructor, and is passed in from the top level Chatbot component. The setState function here actually manipulates the top level state of the Chatbot, so it's important that we make sure that we preserve the previous state.\n//       this.setState((prevState) => ({\n//         ...prevState,\n//         messages: [...prevState.messages, message],\n//       }));\n//     }\n//   }\n//   export default ActionProvider;","map":{"version":3,"sources":["D:/javae/ChatBot_Frontend/chatbot-frontend/src/ActionProvider.js"],"names":["React","axios","ActionProvider1","Component","state","message","componentDidMount","get","then","res","persons","data","setState","render","map","person","name","id"],"mappings":";AAGA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,eAAe,MAAMC,eAAN,SAA8BF,KAAK,CAACG,SAApC,CAA8C;AAAA;AAAA;AAAA,SAC3DC,KAD2D,GACnD;AACNC,MAAAA,OAAO,EAAE;AADH,KADmD;AAAA;;AAK3DC,EAAAA,iBAAiB,GAAG;AAClBL,IAAAA,KAAK,CAACM,GAAN,CAAW,sDAAX,EACGC,IADH,CACQC,GAAG,IAAI;AACX,YAAMC,OAAO,GAAGD,GAAG,CAACE,IAApB;AACA,WAAKC,QAAL,CAAc;AAAEF,QAAAA;AAAF,OAAd;AACD,KAJH;AAKD;;AAEDG,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,gBAEI,KAAKT,KAAL,CAAWM,OAAX,CACGI,GADH,CACOC,MAAM,iBACT;AAAA,kBAAqBA,MAAM,CAACC;AAA5B,SAASD,MAAM,CAACE,EAAhB;AAAA;AAAA;AAAA;AAAA,cAFJ;AAFJ;AAAA;AAAA;AAAA;AAAA,YADF;AAUD;;AAxB0D,C,CAsC7D;AAqBA;AAEA;AACA;AAEA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAGA;AACA;AAEA;AAEA;AACA;AACA;AAWA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["\r\n\r\n\r\nimport React from 'react';\r\nimport axios from 'axios';\r\n\r\nexport default class ActionProvider1 extends React.Component {\r\n  state = {\r\n    message: []\r\n  }\r\n\r\n  componentDidMount() {\r\n    axios.get(`http://127.0.0.1:5000/chat?message=who is matt asay?`)\r\n      .then(res => {\r\n        const persons = res.data;\r\n        this.setState({ persons });\r\n      })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <ul>\r\n        {\r\n          this.state.persons\r\n            .map(person =>\r\n              <li key={person.id}>{person.name}</li>\r\n            )\r\n        }\r\n      </ul>\r\n    )\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n//////////////////////////////////////////////////////////\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import axios from 'axios';\r\n\r\n// class ActionProvider {\r\n//     constructor(createChatBotMessage, setStateFunc) {\r\n      \r\n//       this.createChatBotMessage = createChatBotMessage;\r\n//       this.setState = setStateFunc;\r\n//     }\r\n\r\n  \r\n//     // new method\r\n//     greet() {\r\n//       const greetingMessage = this.createChatBotMessage(\"Hi, friend.\");\r\n//       this.updateChatbotState(greetingMessage);\r\n//       console.log(greetingMessage);\r\n//     }\r\n\r\n//     ujjwalFunction()\r\n//     {\r\n//       const ujjwalmsg=this.createChatBotMessage(\"asdkjfhkjasdgfkjgDFJS\");\r\n//       this.updateChatbotState(ujjwalmsg);\r\n//     }\r\n  \r\n//     handleJavascriptList = () => {\r\n//       const message = this.createChatBotMessage(\r\n//         \"Fantastic, I've got the following resources for you on Javascript:\",\r\n//         {\r\n//           widget: \"javascriptLinks\",\r\n//         }\r\n//       );\r\n//       console.log(typeof(message));\r\n//       console.log((message));\r\n//       this.updateChatbotState(message);\r\n//     }\r\n\r\n//     handleSpringbootList = () => {\r\n//       const message=this.createChatBotMessage(\r\n//         \"Fantastic, I've got the following resources for you on Springboot\",\r\n//         {\r\n//           widget:\"SpringbootLinks\",\r\n//         }\r\n//       );\r\n\r\n//       this.updateChatbotState(message);\r\n//     };\r\n\r\n\r\n\r\n//   //   componentDidMount(){\r\n//   //     this.fetchApiMessage().then((res) => {\r\n//   //         const l=this.createChatBotMessage(res.data);\r\n//   //         this.updateChatbotState(l);\r\n//   //         console.log(\"&&&&&&&&&&&&&&&&&&&&&&&&&&&&\");\r\n//   //         console.log(typeof(l));\r\n//   //         console.log(\"&&&&&&&&&&&&&&&&&&&&&&&&&&&&\");\r\n//   //     });\r\n//   // }\r\n\r\n\r\n\r\n//     fetchApiMessage=(message)=>\r\n//    {\r\n//       var m;\r\n//        axios.get('http://127.0.0.1:5000/chat?message=who is matt asay?')\r\n//         .then(function(response){ return  response })\r\n//         .then(function(data) {\r\n//             const items = data;\r\n//             console.log(\"##############\");\r\n//             console.log(typeof((items.data)) )\r\n//             console.log(((items.data)) )\r\n//             m=(items.data);\r\n//             console.log(\"*************\");\r\n//             console.log(m);\r\n//             return m\r\n//           })\r\n\r\n//           const l= this.createChatBotMessage(m);\r\n//           this.updateChatbotState(l);\r\n//           console.log(\"&&&&&&&&&&&&&&&&&&&&&&&&&&&&\");\r\n//           console.log(typeof(m));\r\n \r\n//    };\r\n\r\n\r\n//    fetchApiMessage=(message)=>\r\n//    {\r\n\r\n//     const response = await axios.get('http://127.0.0.1:5000/chat?message=who is matt asay?');\r\n\r\n//     console.log(typeof(response));\r\n//     console.log((response));\r\n//    };\r\n   \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n//     updateChatbotState(message) {\r\n//       // NOTICE: This function is set in the constructor, and is passed in from the top level Chatbot component. The setState function here actually manipulates the top level state of the Chatbot, so it's important that we make sure that we preserve the previous state.\r\n  \r\n//       this.setState((prevState) => ({\r\n//         ...prevState,\r\n//         messages: [...prevState.messages, message],\r\n//       }));\r\n//     }\r\n//   }\r\n  \r\n//   export default ActionProvider;"]},"metadata":{},"sourceType":"module"}