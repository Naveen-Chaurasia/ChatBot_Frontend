{"ast":null,"code":"// MessageParser starter code in MessageParser.js\nclass MessageParser {\n  constructor(actionProvider) {\n    this.actionProvider = actionProvider;\n  }\n\n  parse(message) {\n    const lowerCaseMessage = message.toLowerCase();\n\n    if (lowerCaseMessage.includes(\"hello\") || lowerCaseMessage.includes(\"hi\")) {\n      this.actionProvider.greet();\n    }\n\n    if (lowerCaseMessage.includes(\"javascript\")) {\n      this.actionProvider.handleJavascriptList();\n    }\n\n    if (lowerCaseMessage.includes(\"springboot\")) {\n      this.actionProvider.handleSpringbootList();\n    }\n\n    if (lowerCaseMessage.includes(\"how is ujjwal\")) {\n      //this.actionProvider.ujjwalFunction();\n      this.actionProvider.fetchApiMessage(message);\n    } else {\n      this.actionProvider.fetchApiMessage(message);\n    }\n  }\n\n}\n\nexport default MessageParser;","map":{"version":3,"sources":["D:/javae/ChatBot_Frontend/chatbot-frontend/src/MessageParser.js"],"names":["MessageParser","constructor","actionProvider","parse","message","lowerCaseMessage","toLowerCase","includes","greet","handleJavascriptList","handleSpringbootList","fetchApiMessage"],"mappings":"AAAA;AACA,MAAMA,aAAN,CAAoB;AAChBC,EAAAA,WAAW,CAACC,cAAD,EAAiB;AAC1B,SAAKA,cAAL,GAAsBA,cAAtB;AACD;;AAEDC,EAAAA,KAAK,CAACC,OAAD,EAAU;AACb,UAAMC,gBAAgB,GAAGD,OAAO,CAACE,WAAR,EAAzB;;AAEA,QAAID,gBAAgB,CAACE,QAAjB,CAA0B,OAA1B,KAAsCF,gBAAgB,CAACE,QAAjB,CAA0B,IAA1B,CAA1C,EAA2E;AACzE,WAAKL,cAAL,CAAoBM,KAApB;AACD;;AAED,QAAIH,gBAAgB,CAACE,QAAjB,CAA0B,YAA1B,CAAJ,EAA6C;AAC3C,WAAKL,cAAL,CAAoBO,oBAApB;AACD;;AACD,QAAIJ,gBAAgB,CAACE,QAAjB,CAA0B,YAA1B,CAAJ,EAA6C;AAC3C,WAAKL,cAAL,CAAoBQ,oBAApB;AACD;;AAED,QAAGL,gBAAgB,CAACE,QAAjB,CAA0B,eAA1B,CAAH,EACA;AACC;AACA,WAAKL,cAAL,CAAoBS,eAApB,CAAoCP,OAApC;AACA,KAJD,MAOA;AACC,WAAKF,cAAL,CAAoBS,eAApB,CAAoCP,OAApC;AACA;AACF;;AA7Be;;AAgClB,eAAeJ,aAAf","sourcesContent":["// MessageParser starter code in MessageParser.js\r\nclass MessageParser {\r\n    constructor(actionProvider) {\r\n      this.actionProvider = actionProvider;\r\n    }\r\n  \r\n    parse(message) {\r\n      const lowerCaseMessage = message.toLowerCase();\r\n  \r\n      if (lowerCaseMessage.includes(\"hello\") || lowerCaseMessage.includes(\"hi\")) {\r\n        this.actionProvider.greet();\r\n      }\r\n  \r\n      if (lowerCaseMessage.includes(\"javascript\")) {\r\n        this.actionProvider.handleJavascriptList();\r\n      }\r\n      if (lowerCaseMessage.includes(\"springboot\")) {\r\n        this.actionProvider.handleSpringbootList();\r\n      }\r\n\r\n      if(lowerCaseMessage.includes(\"how is ujjwal\"))\r\n      {\r\n       //this.actionProvider.ujjwalFunction();\r\n       this.actionProvider.fetchApiMessage(message); \r\n      }\r\n\r\n      else\r\n      {\r\n       this.actionProvider.fetchApiMessage(message); \r\n      }\r\n    }\r\n  }\r\n  \r\n  export default MessageParser;"]},"metadata":{},"sourceType":"module"}